name: 'Build Nightly'
on:
  push:
    branches:
      - master

env:
  BUILD_ID: ${{ github.run_id }}

jobs:
  Build-Philia:
    if: github.ref == format('refs/heads/{0}', github.event.repository.default_branch)
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest, ubuntu-20.04, macos-latest]

    runs-on: ${{matrix.platform}}
    
    steps:
      - uses: actions/checkout@v3
        
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        
      - name: Install Ubuntu dependencies
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
          
      - name: Restore cached dependencies
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "src-tauri"
          cache-directories: "node_modules"
          
      - name: Install frontend dependencies
        run: npm install
        
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Move artifacts
        run: |
          mv src-tauri/target/release/bundle artifacts
          
      - name: Archive Windows artifacts
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: Windows-x86_64
          path: |
            src-tauri/target/release/Philia.exe
            
      - name: Archive Windows artifacts
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: x86_64-pc-windows-gnu
          path: |
            src-tauri/target/release/Philia.exe
            
      - name: Archive Linux artifacts
        if: matrix.platform == 'ubuntu-20.04'
        uses: actions/upload-artifact@v3
        with:
          name: Linux-x86_64
          path: |
            artifacts/deb/*.deb
            artifacts/appimage/*.AppImage
            
      - name: Archive macOS artifacts
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          name: macOS-x86_64
          path: |
            artifacts/dmg/*.dmg
